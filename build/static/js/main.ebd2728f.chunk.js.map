{"version":3,"sources":["components/Hour.js","components/DayLabel.js","components/HourLabel.js","components/Schedule.js","App.js","reportWebVitals.js","index.js"],"names":["Hour","day","hour","console","log","HourBlock","styled","div","props","DayLabel","dayName","LabelBlock","StyledP","p","HourLabel","startTime","ScheduleContainer","settings","numDays","numHours","Schedule","hours","i","j","push","dayLabels","hourLabels","Layout","App","useState","military","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAYeA,I,IAAAA,EAVf,YAA4B,IAAbC,EAAY,EAAZA,IAAKC,EAAO,EAAPA,KAGhB,OAFAC,QAAQC,IAAI,OAAQH,EAAK,QAASC,GAG9B,cAACG,EAAD,CAAWJ,IAAKA,EAAKC,KAAMA,KAa7BG,EAAYC,IAAOC,IAAV,mNAEU,SAACC,GAAD,OAAWA,EAAMP,IAAM,KAE1B,SAACO,GAAD,OAAuB,EAAZA,EAAMN,KAAU,KCgBlCO,I,IAAAA,EArCf,YAA0B,IAAPR,EAAM,EAANA,IAGXS,EAAU,GAEb,OAAQT,GAEL,KAAK,EACDS,EAAU,MACV,MACJ,KAAK,EACDA,EAAU,MACV,MACJ,KAAK,EACDA,EAAU,MACV,MACJ,KAAK,EACDA,EAAU,MACV,MACJ,KAAK,EACDA,EAAU,MACV,MACJ,KAAK,EACDA,EAAU,MACV,MACJ,KAAK,EACDA,EAAU,MAIlB,OACI,cAACC,EAAD,CAAYV,IAAKA,EAAjB,SACG,cAACW,EAAD,UAAUF,OAYfC,EAAaL,IAAOC,IAAV,gOAES,SAACC,GAAD,OAAWA,EAAMP,IAAM,KAc1CW,EAAUN,IAAOO,EAAV,uDClDEC,I,EAAAA,EAVf,YAAuC,IAAnBZ,EAAkB,EAAlBA,KAAMa,EAAY,EAAZA,UAGtB,OACI,cAAC,EAAD,CAAYb,KAAMA,EAAlB,SACG,cAAC,EAAD,UAAUA,EAAOa,OAYtBJ,EAAaL,IAAOC,IAAV,8PAIM,SAACC,GAAD,OAAuB,EAAZA,EAAMN,KAAU,KAU3CU,EAAUN,IAAOO,EAAV,iFCiBb,I,EAAMG,EAAoBV,IAAOC,IAAV,2JAGiB,SAACC,GAAD,OAAWA,EAAMS,SAASC,WAC7B,SAACV,GAAD,OAAqC,EAA1BA,EAAMS,SAASE,YAKhDC,EAlDf,YASI,IAT2B,IAAZH,EAAW,EAAXA,SAOXI,EAAQ,GAEHC,EAAI,EAAGA,EAAIL,EAASC,QAASI,IACnC,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAASE,SAAUI,IAItCF,EAAMG,KAAK,cAAC,EAAD,CAAMvB,IAAKqB,EAAGpB,KAAMqB,KAKnC,IADA,IAAIE,EAAY,GACPH,EAAI,EAAGA,EAAIL,EAASC,QAASI,IAClCG,EAAUD,KAAK,cAAC,EAAD,CAAUvB,IAAOqB,KAIpC,IADA,IAAII,EAAa,GACRJ,EAAI,EAAGA,EAAIL,EAASE,SAAUG,IACnCI,EAAWF,KAAK,cAAC,EAAD,CAAWtB,KAAQoB,EAAGP,UAAaE,EAASF,aAKhE,OACI,eAACC,EAAD,CAAmBC,SAAUA,EAA7B,UAEKI,EACAI,EACAC,MCZb,IAAMC,EAASrB,IAAOC,IAAV,2EAOGqB,EA9Bf,WAEE,IAFa,EASmBC,mBAPR,CACtBd,UAAW,EACXI,SAAU,GACVD,QAAS,EACTY,UAAU,IANC,mBASNb,EATM,KAYb,OAZa,KAcT,cAACU,EAAD,UAEE,cAAC,EAAD,CAAUV,SAAUA,OCbbc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ebd2728f.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nfunction Hour({day, hour}) {\n    console.log(\"Day \", day, \"hour \", hour);\n\n    return(\n        <HourBlock day={day} hour={hour}>\n          \n        </HourBlock>\n    );\n}\n\nexport default Hour;\n\n/*\n grid-column: ${(props) => props.day};\n    grid-row: ${(props) => props.hour + 2} / span 4;\n\n    */\nconst HourBlock = styled.div`\n\n    grid-column-start: ${(props) => props.day + 2};\n    grid-column-end: span 1;\n    grid-row-start: ${(props) => props.hour *4 + 2};\n    grid-row-end: span 4;\n\n    outline: 1px solid black;\n    // background-color: blue;\n\n\n`\n\n","import styled from \"styled-components\";\n\nfunction DayLabel({day}) {\n    \n\n    let dayName = \"\";\n\n     switch (day) {\n        \n        case 0:\n            dayName = \"SUN\";\n            break;\n        case 1:\n            dayName = \"MON\";\n            break;\n        case 2:\n            dayName = \"TUE\";\n            break;\n        case 3:\n            dayName = \"WED\";\n            break;\n        case 4:\n            dayName = \"THU\";\n            break;\n        case 5:\n            dayName = \"FRI\";\n            break;\n        case 6:\n            dayName = \"SAT\"; \n    \n      }\n\n    return(\n        <LabelBlock day={day}>\n           <StyledP>{dayName}</StyledP>\n        </LabelBlock>\n    );\n}\n\nexport default DayLabel;\n\n/*\n grid-column: ${(props) => props.day};\n    grid-row: ${(props) => props.hour + 2} / span 4;\n\n    */\nconst LabelBlock = styled.div`\n\n    grid-column-start: ${(props) => props.day + 2};\n    grid-column-end: span 1;\n    grid-row-start: 1;\n    grid-row-end: span 1;\n\n    // border: 1px solid grey;\n    // background-color: green;\n    \n\n   \n\n\n`\n\nconst StyledP = styled.p`\n    text-align: center;\n\n`","import styled from \"styled-components\";\n\nfunction HourLabel({hour, startTime}) {\n   \n\n    return(\n        <LabelBlock hour={hour}>\n           <StyledP>{hour + startTime}</StyledP>\n        </LabelBlock>\n    );\n}\n\nexport default HourLabel;\n\n/*\n grid-column: ${(props) => props.day};\n    grid-row: ${(props) => props.hour + 2} / span 4;\n\n    */\nconst LabelBlock = styled.div`\n\n    grid-column-start: 1;\n    grid-column-end: span 1;\n    grid-row-start: ${(props) => props.hour *4 + 2};\n    grid-row-end: span 4;\n\n    // border: 1px solid grey;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n\n`\nconst StyledP = styled.p`\n    // text-align: center;\n    // margin: 5px 0;\n\n`","import { useContext } from \"react\";\nimport styled from \"styled-components\";\n\nimport Hour from \"./Hour\";\nimport DayLabel from \"./DayLabel\";\nimport HourLabel from \"./HourLabel\";\n\n\n\nfunction Schedule({settings}) {\n  \n\n    //Should I have an array of top days and side hours as well?\n    //Also should have an array of events\n    //Is there a way to have an \"events\" component that slots in without having its own parent?\n   \n    let hours = [];\n\n    for (let i = 0; i < settings.numDays; i++) {\n       for (let j = 0; j < settings.numHours; j++) {\n           //Note! Changing from 0 start to 1 start here.\n           //Consider if this should be done elsewhere, based off how Date() works. \n           //Removing that for now\n        hours.push(<Hour day={i} hour={j}/>)\n     }\n    }\n\n    let dayLabels = [];\n    for (let i = 0; i < settings.numDays; i++) { \n        dayLabels.push(<DayLabel day = {i}/>);\n    }\n\n    let hourLabels = [];\n    for (let i = 0; i < settings.numHours; i++) { \n        hourLabels.push(<HourLabel hour = {i} startTime = {settings.startTime}/>);\n    }\n\n    \n\n    return(\n        <ScheduleContainer settings={settings}>\n            {/* <HourBar settings={settings}/> */}\n            {hours} \n            {dayLabels}\n            {hourLabels}\n\n        </ScheduleContainer>\n    );\n}\n\nconst ScheduleContainer = styled.div`\n   display: grid;\n   \n   grid-template-columns: 40px repeat(${(props) => props.settings.numDays}, 80px);\n   grid-template-rows: 40px repeat(${(props) => props.settings.numHours * 4}, 10px);\n\n\n`\n\nexport default Schedule; ","\nimport './App.css';\nimport styled, { ThemeContext } from \"styled-components\";\n\nimport Schedule from \"./components/Schedule\";\n\nimport React, {useState} from 'react';\n\n\nfunction App() {\n\n  const defaultSettings = {\n    startTime: 7,\n    numHours: 12,\n    numDays: 7,\n    military: true\n};\n\n  const [settings, setSettings] = useState(defaultSettings);\n\n\n  return (\n   \n      <Layout>\n      \n        <Schedule settings={settings}/>\n      </Layout>\n  \n    \n  );\n}\n\nconst Layout = styled.div`\n  margin-left: 50px;\n  margin-top: 80px;\n\n\n`\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}